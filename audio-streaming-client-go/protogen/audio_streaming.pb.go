// Code generated by protoc-gen-go. DO NOT EDIT.
// source: audio_streaming.proto

package protogen

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ProtoVersion int32

const (
	ProtoVersion_UNKNOWN_VER ProtoVersion = 0
	ProtoVersion_VERSION_1   ProtoVersion = 1
	ProtoVersion_VERSION_2   ProtoVersion = 2
	ProtoVersion_VERSION_3   ProtoVersion = 3
	ProtoVersion_VERSION_4   ProtoVersion = 4
	ProtoVersion_VERSION_5   ProtoVersion = 5
)

var ProtoVersion_name = map[int32]string{
	0: "UNKNOWN_VER",
	1: "VERSION_1",
	2: "VERSION_2",
	3: "VERSION_3",
	4: "VERSION_4",
	5: "VERSION_5",
}

var ProtoVersion_value = map[string]int32{
	"UNKNOWN_VER": 0,
	"VERSION_1":   1,
	"VERSION_2":   2,
	"VERSION_3":   3,
	"VERSION_4":   4,
	"VERSION_5":   5,
}

func (x ProtoVersion) String() string {
	return proto.EnumName(ProtoVersion_name, int32(x))
}

func (ProtoVersion) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_ba83b14cc735506c, []int{0}
}

type ResponseType int32

const (
	ResponseType_UNKNOWN_TYPE  ResponseType = 0
	ResponseType_FRAGMENT_DATA ResponseType = 1
)

var ResponseType_name = map[int32]string{
	0: "UNKNOWN_TYPE",
	1: "FRAGMENT_DATA",
}

var ResponseType_value = map[string]int32{
	"UNKNOWN_TYPE":  0,
	"FRAGMENT_DATA": 1,
}

func (x ResponseType) String() string {
	return proto.EnumName(ResponseType_name, int32(x))
}

func (ResponseType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_ba83b14cc735506c, []int{1}
}

type InitRequest struct {
	EnableLongSpeech     bool         `protobuf:"varint,1,opt,name=enable_long_speech,json=enableLongSpeech,proto3" json:"enable_long_speech,omitempty"`
	EnableChunk          bool         `protobuf:"varint,2,opt,name=enable_chunk,json=enableChunk,proto3" json:"enable_chunk,omitempty"`
	EnableFlushData      bool         `protobuf:"varint,3,opt,name=enable_flush_data,json=enableFlushData,proto3" json:"enable_flush_data,omitempty"`
	ProductId            string       `protobuf:"bytes,4,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	SamplePointBytes     uint32       `protobuf:"varint,5,opt,name=sample_point_bytes,json=samplePointBytes,proto3" json:"sample_point_bytes,omitempty"`
	SendPerSeconds       float64      `protobuf:"fixed64,6,opt,name=send_per_seconds,json=sendPerSeconds,proto3" json:"send_per_seconds,omitempty"`
	SleepRatio           float64      `protobuf:"fixed64,7,opt,name=sleep_ratio,json=sleepRatio,proto3" json:"sleep_ratio,omitempty"`
	AppName              string       `protobuf:"bytes,8,opt,name=app_name,json=appName,proto3" json:"app_name,omitempty"`
	LogLevel             uint32       `protobuf:"varint,9,opt,name=log_level,json=logLevel,proto3" json:"log_level,omitempty"`
	UserName             string       `protobuf:"bytes,10,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	ExpireTime           string       `protobuf:"bytes,11,opt,name=expire_time,json=expireTime,proto3" json:"expire_time,omitempty"`
	Token                string       `protobuf:"bytes,12,opt,name=token,proto3" json:"token,omitempty"`
	Version              ProtoVersion `protobuf:"varint,13,opt,name=version,proto3,enum=com.baidu.acu.pie.ProtoVersion" json:"version,omitempty"`
	ExtraInfo            string       `protobuf:"bytes,14,opt,name=extra_info,json=extraInfo,proto3" json:"extra_info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *InitRequest) Reset()         { *m = InitRequest{} }
func (m *InitRequest) String() string { return proto.CompactTextString(m) }
func (*InitRequest) ProtoMessage()    {}
func (*InitRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ba83b14cc735506c, []int{0}
}

func (m *InitRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InitRequest.Unmarshal(m, b)
}
func (m *InitRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InitRequest.Marshal(b, m, deterministic)
}
func (m *InitRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InitRequest.Merge(m, src)
}
func (m *InitRequest) XXX_Size() int {
	return xxx_messageInfo_InitRequest.Size(m)
}
func (m *InitRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_InitRequest.DiscardUnknown(m)
}

var xxx_messageInfo_InitRequest proto.InternalMessageInfo

func (m *InitRequest) GetEnableLongSpeech() bool {
	if m != nil {
		return m.EnableLongSpeech
	}
	return false
}

func (m *InitRequest) GetEnableChunk() bool {
	if m != nil {
		return m.EnableChunk
	}
	return false
}

func (m *InitRequest) GetEnableFlushData() bool {
	if m != nil {
		return m.EnableFlushData
	}
	return false
}

func (m *InitRequest) GetProductId() string {
	if m != nil {
		return m.ProductId
	}
	return ""
}

func (m *InitRequest) GetSamplePointBytes() uint32 {
	if m != nil {
		return m.SamplePointBytes
	}
	return 0
}

func (m *InitRequest) GetSendPerSeconds() float64 {
	if m != nil {
		return m.SendPerSeconds
	}
	return 0
}

func (m *InitRequest) GetSleepRatio() float64 {
	if m != nil {
		return m.SleepRatio
	}
	return 0
}

func (m *InitRequest) GetAppName() string {
	if m != nil {
		return m.AppName
	}
	return ""
}

func (m *InitRequest) GetLogLevel() uint32 {
	if m != nil {
		return m.LogLevel
	}
	return 0
}

func (m *InitRequest) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

func (m *InitRequest) GetExpireTime() string {
	if m != nil {
		return m.ExpireTime
	}
	return ""
}

func (m *InitRequest) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *InitRequest) GetVersion() ProtoVersion {
	if m != nil {
		return m.Version
	}
	return ProtoVersion_UNKNOWN_VER
}

func (m *InitRequest) GetExtraInfo() string {
	if m != nil {
		return m.ExtraInfo
	}
	return ""
}

type AudioFragmentRequest struct {
	SequenceNum          uint32   `protobuf:"varint,1,opt,name=sequence_num,json=sequenceNum,proto3" json:"sequence_num,omitempty"`
	SendTimestamp        uint64   `protobuf:"varint,2,opt,name=send_timestamp,json=sendTimestamp,proto3" json:"send_timestamp,omitempty"`
	AudioData            []byte   `protobuf:"bytes,3,opt,name=audio_data,json=audioData,proto3" json:"audio_data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AudioFragmentRequest) Reset()         { *m = AudioFragmentRequest{} }
func (m *AudioFragmentRequest) String() string { return proto.CompactTextString(m) }
func (*AudioFragmentRequest) ProtoMessage()    {}
func (*AudioFragmentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ba83b14cc735506c, []int{1}
}

func (m *AudioFragmentRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AudioFragmentRequest.Unmarshal(m, b)
}
func (m *AudioFragmentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AudioFragmentRequest.Marshal(b, m, deterministic)
}
func (m *AudioFragmentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AudioFragmentRequest.Merge(m, src)
}
func (m *AudioFragmentRequest) XXX_Size() int {
	return xxx_messageInfo_AudioFragmentRequest.Size(m)
}
func (m *AudioFragmentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AudioFragmentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AudioFragmentRequest proto.InternalMessageInfo

func (m *AudioFragmentRequest) GetSequenceNum() uint32 {
	if m != nil {
		return m.SequenceNum
	}
	return 0
}

func (m *AudioFragmentRequest) GetSendTimestamp() uint64 {
	if m != nil {
		return m.SendTimestamp
	}
	return 0
}

func (m *AudioFragmentRequest) GetAudioData() []byte {
	if m != nil {
		return m.AudioData
	}
	return nil
}

type AudioFragmentResult struct {
	StartTime            string   `protobuf:"bytes,1,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime              string   `protobuf:"bytes,2,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	Result               string   `protobuf:"bytes,3,opt,name=result,proto3" json:"result,omitempty"`
	Completed            bool     `protobuf:"varint,4,opt,name=completed,proto3" json:"completed,omitempty"`
	SerialNum            string   `protobuf:"bytes,5,opt,name=serial_num,json=serialNum,proto3" json:"serial_num,omitempty"`
	NoiseLevel           uint32   `protobuf:"varint,6,opt,name=noise_level,json=noiseLevel,proto3" json:"noise_level,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AudioFragmentResult) Reset()         { *m = AudioFragmentResult{} }
func (m *AudioFragmentResult) String() string { return proto.CompactTextString(m) }
func (*AudioFragmentResult) ProtoMessage()    {}
func (*AudioFragmentResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_ba83b14cc735506c, []int{2}
}

func (m *AudioFragmentResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AudioFragmentResult.Unmarshal(m, b)
}
func (m *AudioFragmentResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AudioFragmentResult.Marshal(b, m, deterministic)
}
func (m *AudioFragmentResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AudioFragmentResult.Merge(m, src)
}
func (m *AudioFragmentResult) XXX_Size() int {
	return xxx_messageInfo_AudioFragmentResult.Size(m)
}
func (m *AudioFragmentResult) XXX_DiscardUnknown() {
	xxx_messageInfo_AudioFragmentResult.DiscardUnknown(m)
}

var xxx_messageInfo_AudioFragmentResult proto.InternalMessageInfo

func (m *AudioFragmentResult) GetStartTime() string {
	if m != nil {
		return m.StartTime
	}
	return ""
}

func (m *AudioFragmentResult) GetEndTime() string {
	if m != nil {
		return m.EndTime
	}
	return ""
}

func (m *AudioFragmentResult) GetResult() string {
	if m != nil {
		return m.Result
	}
	return ""
}

func (m *AudioFragmentResult) GetCompleted() bool {
	if m != nil {
		return m.Completed
	}
	return false
}

func (m *AudioFragmentResult) GetSerialNum() string {
	if m != nil {
		return m.SerialNum
	}
	return ""
}

func (m *AudioFragmentResult) GetNoiseLevel() uint32 {
	if m != nil {
		return m.NoiseLevel
	}
	return 0
}

type AudioFragmentResponse struct {
	ErrorCode            int32                `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	ErrorMessage         string               `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	Type                 ResponseType         `protobuf:"varint,3,opt,name=type,proto3,enum=com.baidu.acu.pie.ResponseType" json:"type,omitempty"`
	AudioFragment        *AudioFragmentResult `protobuf:"bytes,4,opt,name=audio_fragment,json=audioFragment,proto3" json:"audio_fragment,omitempty"`
	TraceId              string               `protobuf:"bytes,5,opt,name=trace_id,json=traceId,proto3" json:"trace_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *AudioFragmentResponse) Reset()         { *m = AudioFragmentResponse{} }
func (m *AudioFragmentResponse) String() string { return proto.CompactTextString(m) }
func (*AudioFragmentResponse) ProtoMessage()    {}
func (*AudioFragmentResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ba83b14cc735506c, []int{3}
}

func (m *AudioFragmentResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AudioFragmentResponse.Unmarshal(m, b)
}
func (m *AudioFragmentResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AudioFragmentResponse.Marshal(b, m, deterministic)
}
func (m *AudioFragmentResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AudioFragmentResponse.Merge(m, src)
}
func (m *AudioFragmentResponse) XXX_Size() int {
	return xxx_messageInfo_AudioFragmentResponse.Size(m)
}
func (m *AudioFragmentResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AudioFragmentResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AudioFragmentResponse proto.InternalMessageInfo

func (m *AudioFragmentResponse) GetErrorCode() int32 {
	if m != nil {
		return m.ErrorCode
	}
	return 0
}

func (m *AudioFragmentResponse) GetErrorMessage() string {
	if m != nil {
		return m.ErrorMessage
	}
	return ""
}

func (m *AudioFragmentResponse) GetType() ResponseType {
	if m != nil {
		return m.Type
	}
	return ResponseType_UNKNOWN_TYPE
}

func (m *AudioFragmentResponse) GetAudioFragment() *AudioFragmentResult {
	if m != nil {
		return m.AudioFragment
	}
	return nil
}

func (m *AudioFragmentResponse) GetTraceId() string {
	if m != nil {
		return m.TraceId
	}
	return ""
}

func init() {
	proto.RegisterEnum("com.baidu.acu.pie.ProtoVersion", ProtoVersion_name, ProtoVersion_value)
	proto.RegisterEnum("com.baidu.acu.pie.ResponseType", ResponseType_name, ResponseType_value)
	proto.RegisterType((*InitRequest)(nil), "com.baidu.acu.pie.InitRequest")
	proto.RegisterType((*AudioFragmentRequest)(nil), "com.baidu.acu.pie.AudioFragmentRequest")
	proto.RegisterType((*AudioFragmentResult)(nil), "com.baidu.acu.pie.AudioFragmentResult")
	proto.RegisterType((*AudioFragmentResponse)(nil), "com.baidu.acu.pie.AudioFragmentResponse")
}

func init() { proto.RegisterFile("audio_streaming.proto", fileDescriptor_ba83b14cc735506c) }

var fileDescriptor_ba83b14cc735506c = []byte{
	// 779 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x94, 0xdf, 0x6f, 0x1b, 0x45,
	0x10, 0xc7, 0x7b, 0xad, 0x1d, 0xfb, 0xe6, 0xec, 0xf4, 0xb2, 0xb4, 0xe8, 0xca, 0x0f, 0xc5, 0x0d,
	0x02, 0xac, 0x08, 0x59, 0x90, 0xc0, 0x03, 0x8f, 0xa6, 0x4d, 0x90, 0x45, 0xe3, 0x46, 0x1b, 0x13,
	0xc4, 0x03, 0x5a, 0x6d, 0xee, 0xc6, 0xce, 0x91, 0xbb, 0xdd, 0x63, 0x77, 0x2f, 0x6a, 0x9e, 0x78,
	0xe5, 0x1f, 0xe3, 0x9f, 0xe2, 0x09, 0xed, 0xac, 0x5d, 0xac, 0x12, 0x09, 0xde, 0x32, 0x9f, 0x99,
	0xcd, 0xcc, 0x7c, 0xe7, 0x7b, 0x86, 0xa7, 0xb2, 0x2d, 0x4a, 0x2d, 0xac, 0x33, 0x28, 0xeb, 0x52,
	0xad, 0x26, 0x8d, 0xd1, 0x4e, 0xb3, 0xbd, 0x5c, 0xd7, 0x93, 0x2b, 0x59, 0x16, 0xed, 0x44, 0xe6,
	0xed, 0xa4, 0x29, 0xf1, 0xe0, 0x8f, 0x0e, 0x24, 0x33, 0x55, 0x3a, 0x8e, 0xbf, 0xb5, 0x68, 0x1d,
	0xfb, 0x02, 0x18, 0x2a, 0x79, 0x55, 0xa1, 0xa8, 0xb4, 0x5a, 0x09, 0xdb, 0x20, 0xe6, 0xd7, 0x59,
	0x34, 0x8a, 0xc6, 0x7d, 0x9e, 0x86, 0xcc, 0x2b, 0xad, 0x56, 0x17, 0xc4, 0xd9, 0x73, 0x18, 0xac,
	0xab, 0xf3, 0xeb, 0x56, 0xdd, 0x64, 0x0f, 0xa9, 0x2e, 0x09, 0xec, 0x85, 0x47, 0xec, 0x10, 0xf6,
	0xd6, 0x25, 0xcb, 0xaa, 0xb5, 0xd7, 0xa2, 0x90, 0x4e, 0x66, 0x8f, 0xa8, 0xee, 0x71, 0x48, 0x9c,
	0x7a, 0xfe, 0x52, 0x3a, 0xc9, 0x3e, 0x06, 0x68, 0x8c, 0x2e, 0xda, 0xdc, 0x89, 0xb2, 0xc8, 0x3a,
	0xa3, 0x68, 0x1c, 0xf3, 0x78, 0x4d, 0x66, 0x85, 0x9f, 0xcd, 0xca, 0xba, 0xa9, 0x50, 0x34, 0xba,
	0x54, 0x4e, 0x5c, 0xdd, 0x39, 0xb4, 0x59, 0x77, 0x14, 0x8d, 0x87, 0x3c, 0x0d, 0x99, 0x73, 0x9f,
	0xf8, 0xce, 0x73, 0x36, 0x86, 0xd4, 0xa2, 0x2a, 0x44, 0x83, 0x46, 0x58, 0xcc, 0xb5, 0x2a, 0x6c,
	0xb6, 0x33, 0x8a, 0xc6, 0x11, 0xdf, 0xf5, 0xfc, 0x1c, 0xcd, 0x45, 0xa0, 0x6c, 0x1f, 0x12, 0x5b,
	0x21, 0x36, 0xc2, 0x48, 0x57, 0xea, 0xac, 0x47, 0x45, 0x40, 0x88, 0x7b, 0xc2, 0x9e, 0x41, 0x5f,
	0x36, 0x8d, 0x50, 0xb2, 0xc6, 0xac, 0x4f, 0x53, 0xf5, 0x64, 0xd3, 0xcc, 0x65, 0x8d, 0xec, 0x43,
	0x88, 0x2b, 0xbd, 0x12, 0x15, 0xde, 0x62, 0x95, 0xc5, 0x34, 0x4a, 0xbf, 0xd2, 0xab, 0x57, 0x3e,
	0xf6, 0xc9, 0xd6, 0xa2, 0x09, 0x0f, 0x81, 0x1e, 0xf6, 0x3d, 0xa0, 0x97, 0xfb, 0x90, 0xe0, 0x9b,
	0xa6, 0x34, 0x28, 0x5c, 0x59, 0x63, 0x96, 0x50, 0x1a, 0x02, 0x5a, 0x94, 0x35, 0xb2, 0x27, 0xd0,
	0x75, 0xfa, 0x06, 0x55, 0x36, 0xa0, 0x54, 0x08, 0xd8, 0xb7, 0xd0, 0xbb, 0x45, 0x63, 0x4b, 0xad,
	0xb2, 0xe1, 0x28, 0x1a, 0xef, 0x1e, 0xed, 0x4f, 0xfe, 0x75, 0xd5, 0xc9, 0xb9, 0x3f, 0xf7, 0x65,
	0x28, 0xe3, 0x9b, 0x7a, 0x2f, 0x2f, 0xbe, 0x71, 0x46, 0x8a, 0x52, 0x2d, 0x75, 0xb6, 0x1b, 0xe4,
	0x25, 0x32, 0x53, 0x4b, 0x7d, 0xf0, 0x3b, 0x3c, 0x99, 0x7a, 0xdb, 0x9c, 0x1a, 0xb9, 0xaa, 0x51,
	0xbd, 0xb5, 0xc4, 0x73, 0x18, 0x58, 0xff, 0xa7, 0xca, 0x51, 0xa8, 0xb6, 0x26, 0x33, 0x0c, 0x79,
	0xb2, 0x61, 0xf3, 0xb6, 0x66, 0x9f, 0x02, 0x69, 0x4a, 0x9b, 0x58, 0x27, 0xeb, 0x86, 0x9c, 0xd0,
	0xe1, 0x43, 0x4f, 0x17, 0x1b, 0xe8, 0x07, 0x08, 0xc6, 0x7c, 0x6b, 0x82, 0x01, 0x8f, 0x89, 0xf8,
	0xf3, 0x1f, 0xfc, 0x19, 0xc1, 0x7b, 0xef, 0x4c, 0x60, 0xdb, 0xca, 0xf9, 0x67, 0xd6, 0x49, 0xe3,
	0x82, 0x50, 0x51, 0x98, 0x9b, 0x08, 0xe9, 0xf4, 0x0c, 0xfa, 0x9b, 0xde, 0xd4, 0x36, 0xe6, 0xbd,
	0x75, 0x57, 0xf6, 0x3e, 0xec, 0x18, 0xfa, 0x1f, 0xd4, 0x2c, 0xe6, 0xeb, 0x88, 0x7d, 0x04, 0x71,
	0xae, 0xbd, 0x5f, 0x1c, 0x06, 0x9f, 0xf5, 0xf9, 0x3f, 0x80, 0xfa, 0xa1, 0x29, 0x65, 0x45, 0xeb,
	0x76, 0xd7, 0xfd, 0x88, 0xf8, 0x65, 0xf7, 0x21, 0x51, 0xba, 0xb4, 0xb8, 0x3e, 0xfa, 0x0e, 0xc9,
	0x01, 0x84, 0xe8, 0xec, 0x07, 0x7f, 0x45, 0xf0, 0xf4, 0xdd, 0x3d, 0x1a, 0xad, 0x2c, 0xd2, 0x05,
	0x8c, 0xd1, 0x46, 0xe4, 0xba, 0x08, 0x9b, 0x74, 0x79, 0x4c, 0xe4, 0x85, 0x2e, 0x90, 0x7d, 0x02,
	0xc3, 0x90, 0xae, 0xd1, 0x5a, 0xb9, 0xda, 0xac, 0x33, 0x20, 0x78, 0x16, 0x18, 0x3b, 0x86, 0x8e,
	0xbb, 0x6b, 0x90, 0x36, 0xba, 0xff, 0xfa, 0x9b, 0x76, 0x8b, 0xbb, 0x06, 0x39, 0x15, 0xb3, 0x33,
	0xd8, 0x0d, 0xca, 0x2f, 0xd7, 0x23, 0xd1, 0xd6, 0xc9, 0xd1, 0x67, 0xf7, 0x3c, 0xbf, 0xe7, 0x04,
	0x7c, 0x28, 0xb7, 0xa1, 0x97, 0xdc, 0x19, 0x99, 0xa3, 0xff, 0x4c, 0x83, 0x3e, 0x3d, 0x8a, 0x67,
	0xc5, 0xe1, 0xaf, 0x30, 0xd8, 0x76, 0x1f, 0x7b, 0x0c, 0xc9, 0x8f, 0xf3, 0x1f, 0xe6, 0xaf, 0x7f,
	0x9a, 0x8b, 0xcb, 0x13, 0x9e, 0x3e, 0x60, 0x43, 0x88, 0x2f, 0x4f, 0xf8, 0xc5, 0xec, 0xf5, 0x5c,
	0x7c, 0x95, 0x46, 0xdb, 0xe1, 0x51, 0xfa, 0x70, 0x3b, 0x3c, 0x4e, 0x1f, 0x6d, 0x87, 0x5f, 0xa7,
	0x9d, 0xed, 0xf0, 0x9b, 0xb4, 0x7b, 0x78, 0x0c, 0x83, 0xed, 0x5d, 0x59, 0x0a, 0x83, 0x4d, 0xaf,
	0xc5, 0xcf, 0xe7, 0x27, 0xe9, 0x03, 0xb6, 0x07, 0xc3, 0x53, 0x3e, 0xfd, 0xfe, 0xec, 0x64, 0xbe,
	0x10, 0x2f, 0xa7, 0x8b, 0x69, 0x1a, 0x1d, 0xdd, 0x00, 0x4c, 0xad, 0xb9, 0x40, 0x73, 0x5b, 0xe6,
	0xc8, 0x7e, 0x81, 0x8e, 0xf7, 0x28, 0xfb, 0xfc, 0xbf, 0x85, 0xa0, 0xaf, 0xe1, 0x83, 0xf1, 0xff,
	0x50, 0x8c, 0x26, 0x1a, 0x47, 0x5f, 0x46, 0x57, 0x3b, 0xf4, 0xc3, 0x7b, 0xfc, 0x77, 0x00, 0x00,
	0x00, 0xff, 0xff, 0xa3, 0x54, 0xef, 0x66, 0x91, 0x05, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// AsrServiceClient is the client API for AsrService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AsrServiceClient interface {
	Send(ctx context.Context, opts ...grpc.CallOption) (AsrService_SendClient, error)
}

type asrServiceClient struct {
	cc *grpc.ClientConn
}

func NewAsrServiceClient(cc *grpc.ClientConn) AsrServiceClient {
	return &asrServiceClient{cc}
}

func (c *asrServiceClient) Send(ctx context.Context, opts ...grpc.CallOption) (AsrService_SendClient, error) {
	stream, err := c.cc.NewStream(ctx, &_AsrService_serviceDesc.Streams[0], "/com.baidu.acu.pie.AsrService/send", opts...)
	if err != nil {
		return nil, err
	}
	x := &asrServiceSendClient{stream}
	return x, nil
}

type AsrService_SendClient interface {
	Send(*AudioFragmentRequest) error
	Recv() (*AudioFragmentResponse, error)
	grpc.ClientStream
}

type asrServiceSendClient struct {
	grpc.ClientStream
}

func (x *asrServiceSendClient) Send(m *AudioFragmentRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *asrServiceSendClient) Recv() (*AudioFragmentResponse, error) {
	m := new(AudioFragmentResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// AsrServiceServer is the server API for AsrService service.
type AsrServiceServer interface {
	Send(AsrService_SendServer) error
}

// UnimplementedAsrServiceServer can be embedded to have forward compatible implementations.
type UnimplementedAsrServiceServer struct {
}

func (*UnimplementedAsrServiceServer) Send(srv AsrService_SendServer) error {
	return status.Errorf(codes.Unimplemented, "method Send not implemented")
}

func RegisterAsrServiceServer(s *grpc.Server, srv AsrServiceServer) {
	s.RegisterService(&_AsrService_serviceDesc, srv)
}

func _AsrService_Send_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(AsrServiceServer).Send(&asrServiceSendServer{stream})
}

type AsrService_SendServer interface {
	Send(*AudioFragmentResponse) error
	Recv() (*AudioFragmentRequest, error)
	grpc.ServerStream
}

type asrServiceSendServer struct {
	grpc.ServerStream
}

func (x *asrServiceSendServer) Send(m *AudioFragmentResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *asrServiceSendServer) Recv() (*AudioFragmentRequest, error) {
	m := new(AudioFragmentRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _AsrService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "com.baidu.acu.pie.AsrService",
	HandlerType: (*AsrServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "send",
			Handler:       _AsrService_Send_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "audio_streaming.proto",
}
